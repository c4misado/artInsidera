{"ast":null,"code":"/*\nCopyright (c) 2017 NAVER Corp.\r\n@egjs/lazyloaded JavaScript library\r\n@egjs/lazyloaded project is licensed under the MIT license\r\n\r\n\r\n@version 0.0.2\n*/\nimport Component from '@egjs/component';\nvar isWindow = typeof window !== \"undefined\";\nvar ua = isWindow ? window.navigator.userAgent : \"\";\nvar SUPPORT_COMPUTEDSTYLE = isWindow ? !!(\"getComputedStyle\" in window) : false;\nvar IS_IE = /MSIE|Trident|Windows Phone|Edge/.test(ua);\nvar SUPPORT_ADDEVENTLISTENER = isWindow ? !!(\"addEventListener\" in document) : false;\nvar WIDTH = \"width\";\nvar HEIGHT = \"height\";\n\nfunction getAttribute(el, name) {\n  return el.getAttribute(name) || \"\";\n}\n\nfunction toArray(arr) {\n  return [].slice.call(arr);\n}\n\nfunction isDataAttribute(target, prefix) {\n  if (prefix === void 0) {\n    prefix = \"data-\";\n  }\n\n  return !!target.getAttribute(prefix + \"width\");\n}\n\nfunction addEvent(element, type, handler) {\n  if (SUPPORT_ADDEVENTLISTENER) {\n    element.addEventListener(type, handler, false);\n  } else if (element.attachEvent) {\n    element.attachEvent(\"on\" + type, handler);\n  } else {\n    element[\"on\" + type] = handler;\n  }\n}\n\nfunction removeEvent(element, type, handler) {\n  if (element.removeEventListener) {\n    element.removeEventListener(type, handler, false);\n  } else if (element.detachEvent) {\n    element.detachEvent(\"on\" + type, handler);\n  } else {\n    element[\"on\" + type] = null;\n  }\n}\n\nfunction innerWidth(el) {\n  return getSize(el, \"Width\");\n}\n\nfunction innerHeight(el) {\n  return getSize(el, \"Height\");\n}\n\nfunction getStyles(el) {\n  return (SUPPORT_COMPUTEDSTYLE ? window.getComputedStyle(el) : el.currentStyle) || {};\n}\n\nfunction getSize(el, name) {\n  var size = el[\"client\" + name] || el[\"offset\" + name];\n  return parseFloat(size || getStyles(el)[name.toLowerCase()]) || 0;\n}\n\nvar elements = [];\n\nfunction add(element, prefix) {\n  !elements.length && addEvent(window, \"resize\", resizeAll);\n  element.__PREFIX__ = prefix;\n  elements.push(element);\n  resize(element);\n}\n\nfunction remove(element, prefix) {\n  var index = elements.indexOf(element);\n\n  if (index < 0) {\n    return;\n  }\n\n  var fixed = getAttribute(element, prefix + \"fixed\");\n  delete element.__PREFIX__;\n  element.style[fixed === HEIGHT ? WIDTH : HEIGHT] = \"\";\n  elements.splice(index, 1);\n  !elements.length && removeEvent(window, \"resize\", resizeAll);\n}\n\nfunction resize(element, prefix) {\n  if (prefix === void 0) {\n    prefix = \"data-\";\n  }\n\n  var elementPrefix = element.__PREFIX__;\n\n  if (typeof elementPrefix !== \"string\") {\n    elementPrefix = prefix;\n  }\n\n  var dataWidth = parseInt(getAttribute(element, \"\" + elementPrefix + WIDTH), 10) || 0;\n  var dataHeight = parseInt(getAttribute(element, \"\" + elementPrefix + HEIGHT), 10) || 0;\n  var fixed = getAttribute(element, elementPrefix + \"fixed\");\n\n  if (fixed === HEIGHT) {\n    var size = innerHeight(element) || dataHeight;\n    element.style[WIDTH] = dataWidth / dataHeight * size + \"px\";\n  } else {\n    var size = innerWidth(element) || dataWidth;\n    element.style[HEIGHT] = dataHeight / dataWidth * size + \"px\";\n  }\n}\n\nfunction resizeAll() {\n  elements.forEach(function (element) {\n    resize(element);\n  });\n}\n/**\n * @namespace eg.LazyLoaded\n */\n\n/**\n * This module is used to wait for images or videos to load.\n * @ko 이 모듈은 이미지 또는 비디오 로딩을 대기할 수 있습니다.\n * @memberof eg.LazyLoaded\n * @param -\n * @example\n * ## HTML\n * ```html\n * <div>\n *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n *    <img src=\"./2.jpg\">\n *    <img src=\"./3.jpg\">\n *    <img src=\"./4.jpg\">\n *    <img src=\"ERR\">\n *    <img src=\"./6.jpg\">\n *    <img src=\"./7.jpg\">\n *    <img src=\"ERR\">\n * </div>\n * ```\n * ## Javascript\n * ```js\n * import {check} from \"@egjs/lazyloaded\";\n *\n * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n *   ready: () => console.log(\"ready\"),\n *   finish: () => console.log(\"finish\"),\n *   error: e => console.log(\"error\", e),\n * });\n * ```\n */\n\n\nfunction check(elements, prefix) {\n  if (prefix === void 0) {\n    prefix = \"data-\";\n  }\n\n  var component = new Component();\n  var finishCount = 0;\n  var readyCount = 0;\n\n  function checkReady() {\n    if (--readyCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when the size of all images is available.\n     * @ko 모든 이미지의 사이즈를 구할 수 있는 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#ready\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   ready: () => console.log(\"ready\"),\n     * });\n     * ```\n     */\n\n\n    component.trigger(\"ready\");\n  }\n\n  function checkFinish() {\n    if (--finishCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when all images have been completed loading.\n     * @ko 모든 이미지가 로딩이 완료된 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#finish\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   finish: () => console.log(\"finish\"),\n     * });\n     * ```\n     */\n\n\n    component.trigger(\"finish\");\n  }\n\n  elements.forEach(function (el, i) {\n    var tagName = el.tagName;\n\n    if (isDataAttribute(el, prefix) && tagName !== \"IMG\") {\n      add(el, prefix);\n      ++finishCount;\n      setTimeout(function () {\n        check(toArray(el.querySelectorAll(\"img\")), prefix).on(\"finish\", function () {\n          remove(el, prefix);\n          checkFinish();\n        });\n      });\n      return;\n    }\n\n    var images = tagName === \"IMG\" ? [el] : toArray(el.querySelectorAll(\"img\"));\n\n    if (!images.length) {\n      return;\n    }\n\n    images.forEach(function (img, j) {\n      if (img.complete && (!IS_IE || IS_IE && img.naturalWidth)) {\n        if (!img.naturalWidth) {\n          setTimeout(function () {\n            component.trigger(\"error\", {\n              itemTarget: el,\n              itemIndex: i,\n              target: img,\n              index: j\n            });\n          });\n        }\n\n        return;\n      }\n\n      if (isDataAttribute(img, prefix)) {\n        add(img, prefix);\n      } else {\n        ++readyCount;\n      }\n\n      ++finishCount;\n\n      function onError() {\n        /**\n         * An event occurs if the image fails to load.\n         * @ko 이미지가 로딩에 실패하면 이벤트가 발생한다.\n         * @event eg.LazyLoaded#error\n         * @param {object} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n         * @param {HTMLElement} [e.itemTarget] - The item's element with error images.<ko>오류난 이미지가 있는 아이템의 엘리먼트</ko>\n         * @param {number} [e.itemindex] - The item's index with error images. <ko>오류난 이미지가 있는 아이템의 인덱스</ko>\n         * @param {HTMLElement} [e.target] - Error image element <ko>오류난 이미지 엘리먼트</ko>\n         * @param {number} [e.index] - Error image index <ko>오류난 이미지의 인덱스</ko>\n         * @example\n         * ```html\n         * <div>\n         *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n         *    <img src=\"./2.jpg\"/>\n         *    <img src=\"ERR\"/>\n         * </div>\n         * ```\n         * ## Javascript\n         * ```js\n         * import {check} from \"@egjs/lazyloaded\";\n         *\n         * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n         *   error: e => {\n         *     // <div>...</div>, 0, <img src=\"ERR\"/>, 2\n         *     console.log(e.itemTarget, e.itemIndex, e.target, e.index),\n         *   },\n         * });\n         * ```\n         */\n        component.trigger(\"error\", {\n          itemTarget: el,\n          itemIndex: i,\n          target: img,\n          index: j\n        });\n      }\n\n      function onCheck(e) {\n        var target = e.target || e.srcElement;\n        removeEvent(target, \"error\", onCheck);\n        removeEvent(target, \"load\", onCheck);\n\n        if (isDataAttribute(target, prefix)) {\n          remove(target, prefix);\n        } else {\n          checkReady();\n        }\n\n        if (e.type === \"error\") {\n          onError();\n        }\n\n        checkFinish();\n      }\n\n      addEvent(img, \"load\", onCheck);\n      addEvent(img, \"error\", onCheck);\n      IS_IE && img.setAttribute(\"src\", img.getAttribute(\"src\"));\n    });\n  });\n  !readyCount && setTimeout(function () {\n    component.trigger(\"ready\");\n  });\n  !finishCount && setTimeout(function () {\n    component.trigger(\"finish\");\n  });\n  return component;\n}\n\nexport { check, remove as removeAutoSizer };","map":{"version":3,"sources":["../src/consts.ts","../src/utils.ts","../src/AutoSizer.ts","../src/LazyLoaded.ts"],"names":["isWindow","ua","window","SUPPORT_COMPUTEDSTYLE","IS_IE","SUPPORT_ADDEVENTLISTENER","WIDTH","HEIGHT","el","name","arr","target","prefix","element","type","handler","getSize","size","parseFloat","getStyles","elements","addEvent","resize","index","fixed","getAttribute","removeEvent","elementPrefix","dataWidth","parseInt","dataHeight","innerHeight","innerWidth","component","finishCount","readyCount","tagName","isDataAttribute","addAutoSizer","setTimeout","check","toArray","removeAutoSizer","checkFinish","images","img","itemTarget","itemIndex","j","e","checkReady","onError"],"mappings":"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","sourcesContent":["const isWindow = typeof window !== \"undefined\";\nconst ua = isWindow ? window.navigator.userAgent : \"\";\nexport const SUPPORT_COMPUTEDSTYLE = isWindow ? !!(\"getComputedStyle\" in window) : false;\nexport const IS_IE = /MSIE|Trident|Windows Phone|Edge/.test(ua);\nexport const SUPPORT_ADDEVENTLISTENER = isWindow ? !!(\"addEventListener\" in document) : false;\nexport const WIDTH = \"width\";\nexport const HEIGHT = \"height\";\n","import { ArrayFormat, InnerSizeType, ClientSizeType, ScrollSizeType, OffsetSizeType } from \"./types\";\n\nimport { SUPPORT_ADDEVENTLISTENER, SUPPORT_COMPUTEDSTYLE } from \"./consts\";\n\nexport function getAttribute(el: HTMLElement, name: string) {\n  return el.getAttribute(name) || \"\";\n}\n\nexport function toArray<T>(arr: ArrayFormat<T>): T[] {\n  return [].slice.call(arr);\n}\nexport function isDataAttribute(target: HTMLElement, prefix: string = \"data-\"): boolean {\n  return !!target.getAttribute(`${prefix}width`);\n}\nexport function addEvent(\n  element: Element | Window,\n  type: string,\n  handler: (...args: any[]) => void,\n) {\n  if (SUPPORT_ADDEVENTLISTENER) {\n    element.addEventListener(type, handler, false);\n  } else if ((element as any).attachEvent) {\n    (element as any).attachEvent(`on${type}`, handler);\n  } else {\n    (element as any)[`on${type}`] = handler;\n  }\n}\nexport function removeEvent(\n  element: Element | Window,\n  type: string,\n  handler: (...args: any[]) => void,\n) {\n  if (element.removeEventListener) {\n    element.removeEventListener(type, handler, false);\n  } else if ((element as any).detachEvent) {\n    (element as any).detachEvent(`on${type}`, handler);\n  } else {\n    (element as any)[`on${type}`] = null;\n  }\n}\n\nexport function innerWidth(el: HTMLElement) {\n  return getSize(el, \"Width\");\n}\nexport function innerHeight(el: HTMLElement) {\n  return getSize(el, \"Height\");\n}\nexport function getStyles(el: Element) {\n  return (SUPPORT_COMPUTEDSTYLE ?\n    window.getComputedStyle(el) : (el as any).currentStyle) || {};\n}\nfunction getSize(el: HTMLElement, name: \"Width\" | \"Height\") {\n  const size = el[`client${name}` as ClientSizeType] || el[`offset${name}` as OffsetSizeType];\n\n  return parseFloat(size || getStyles(el)[name.toLowerCase()]) || 0;\n}\n","import { addEvent, removeEvent, innerWidth, innerHeight, getAttribute } from \"./utils\";\nimport { WIDTH, HEIGHT } from \"./consts\";\nimport { AutoSizerElement } from \"./types\";\n\nconst elements: AutoSizerElement[] = [];\n\nexport function add(element: AutoSizerElement, prefix: string) {\n  !elements.length && addEvent(window, \"resize\", resizeAll);\n  element.__PREFIX__ = prefix;\n  elements.push(element);\n  resize(element);\n}\nexport function remove(element: AutoSizerElement, prefix: string) {\n  const index = elements.indexOf(element);\n\n  if (index < 0) {\n    return;\n  }\n  const fixed = getAttribute(element, `${prefix}fixed`);\n\n  delete element.__PREFIX__;\n  element.style[fixed === HEIGHT ? WIDTH : HEIGHT] = \"\";\n  elements.splice(index, 1);\n  !elements.length && removeEvent(window, \"resize\", resizeAll);\n}\nfunction resize(element: AutoSizerElement, prefix = \"data-\") {\n  let elementPrefix = element.__PREFIX__;\n\n  if (typeof elementPrefix !== \"string\") {\n    elementPrefix = prefix;\n  }\n  const dataWidth = parseInt(getAttribute(element, `${elementPrefix}${WIDTH}`), 10) || 0;\n  const dataHeight = parseInt(getAttribute(element, `${elementPrefix}${HEIGHT}`), 10) || 0;\n  const fixed = getAttribute(element, `${elementPrefix}fixed`);\n\n  if (fixed === HEIGHT) {\n    const size = innerHeight(element) || dataHeight;\n\n    element.style[WIDTH] = `${dataWidth / dataHeight * size}px`;\n  } else {\n    const size = innerWidth(element) || dataWidth;\n\n    element.style[HEIGHT] = `${dataHeight / dataWidth * size}px`;\n  }\n}\nexport function resizeAll() {\n  elements.forEach(element => {\n    resize(element);\n  });\n}\n","import { IS_IE } from \"./consts\";\nimport Component from \"@egjs/component\";\nimport { toArray, isDataAttribute, removeEvent, addEvent } from \"./utils\";\nimport { remove as removeAutoSizer, add as addAutoSizer } from \"./AutoSizer\";\n\n/**\n * @namespace eg.LazyLoaded\n */\n/**\n * This module is used to wait for images or videos to load.\n * @ko 이 모듈은 이미지 또는 비디오 로딩을 대기할 수 있습니다.\n * @memberof eg.LazyLoaded\n * @param -\n * @example\n * ## HTML\n * ```html\n * <div>\n *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n *    <img src=\"./2.jpg\">\n *    <img src=\"./3.jpg\">\n *    <img src=\"./4.jpg\">\n *    <img src=\"ERR\">\n *    <img src=\"./6.jpg\">\n *    <img src=\"./7.jpg\">\n *    <img src=\"ERR\">\n * </div>\n * ```\n * ## Javascript\n * ```js\n * import {check} from \"@egjs/lazyloaded\";\n *\n * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n *   ready: () => console.log(\"ready\"),\n *   finish: () => console.log(\"finish\"),\n *   error: e => console.log(\"error\", e),\n * });\n * ```\n */\nexport function check(\n  elements: HTMLElement[],\n  prefix: string = \"data-\",\n): Component {\n  const component = new Component();\n  let finishCount = 0;\n  let readyCount = 0;\n\n  function checkReady() {\n    if (--readyCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when the size of all images is available.\n     * @ko 모든 이미지의 사이즈를 구할 수 있는 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#ready\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   ready: () => console.log(\"ready\"),\n     * });\n     * ```\n     */\n    component.trigger(\"ready\");\n  }\n  function checkFinish() {\n    if (--finishCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when all images have been completed loading.\n     * @ko 모든 이미지가 로딩이 완료된 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#finish\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   finish: () => console.log(\"finish\"),\n     * });\n     * ```\n     */\n    component.trigger(\"finish\");\n  }\n  elements.forEach((el, i) => {\n    const tagName = el.tagName;\n\n    if (isDataAttribute(el, prefix) && tagName !== \"IMG\") {\n      addAutoSizer(el, prefix);\n      ++finishCount;\n      setTimeout(() => {\n        check(toArray(el.querySelectorAll(\"img\")), prefix).on(\"finish\", () => {\n          removeAutoSizer(el, prefix);\n          checkFinish();\n        });\n      });\n      return;\n    }\n    const images = tagName === \"IMG\" ? [el as HTMLImageElement] : toArray(el.querySelectorAll(\"img\"));\n\n    if (!images.length) {\n      return;\n    }\n    images.forEach((img, j) => {\n      if (img.complete && (!IS_IE || (IS_IE && img.naturalWidth))) {\n        if (!img.naturalWidth) {\n          setTimeout(() => {\n            component.trigger(\"error\", {\n              itemTarget: el,\n              itemIndex: i,\n              target: img,\n              index: j,\n            });\n          });\n        }\n        return;\n      }\n      if (isDataAttribute(img, prefix)) {\n        addAutoSizer(img, prefix);\n      } else {\n        ++readyCount;\n      }\n      ++finishCount;\n\n      function onError() {\n        /**\n         * An event occurs if the image fails to load.\n         * @ko 이미지가 로딩에 실패하면 이벤트가 발생한다.\n         * @event eg.LazyLoaded#error\n         * @param {object} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n         * @param {HTMLElement} [e.itemTarget] - The item's element with error images.<ko>오류난 이미지가 있는 아이템의 엘리먼트</ko>\n         * @param {number} [e.itemindex] - The item's index with error images. <ko>오류난 이미지가 있는 아이템의 인덱스</ko>\n         * @param {HTMLElement} [e.target] - Error image element <ko>오류난 이미지 엘리먼트</ko>\n         * @param {number} [e.index] - Error image index <ko>오류난 이미지의 인덱스</ko>\n         * @example\n         * ```html\n         * <div>\n         *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n         *    <img src=\"./2.jpg\"/>\n         *    <img src=\"ERR\"/>\n         * </div>\n         * ```\n         * ## Javascript\n         * ```js\n         * import {check} from \"@egjs/lazyloaded\";\n         *\n         * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n         *   error: e => {\n         *     // <div>...</div>, 0, <img src=\"ERR\"/>, 2\n         *     console.log(e.itemTarget, e.itemIndex, e.target, e.index),\n         *   },\n         * });\n         * ```\n         */\n        component.trigger(\"error\", {\n          itemTarget: el,\n          itemIndex: i,\n          target: img,\n          index: j,\n        });\n      }\n      function onCheck(e: Event) {\n        const target = (e.target || e.srcElement) as HTMLImageElement;\n\n        removeEvent(target, \"error\", onCheck);\n        removeEvent(target, \"load\", onCheck);\n\n        if (isDataAttribute(target, prefix)) {\n          removeAutoSizer(target, prefix);\n        } else {\n          checkReady();\n        }\n        if (e.type === \"error\") {\n          onError();\n        }\n        checkFinish();\n      }\n      addEvent(img, \"load\", onCheck);\n      addEvent(img, \"error\", onCheck);\n\n      IS_IE && img.setAttribute(\"src\", img.getAttribute(\"src\") as string);\n    });\n  });\n\n  !readyCount && setTimeout(() => {\n    component.trigger(\"ready\");\n  });\n\n  !finishCount && setTimeout(() => {\n    component.trigger(\"finish\");\n  });\n\n  return component;\n}\n\n\n/**\n * Remove the element that was registered in AutoSizer.\n * @ko AutoSizer에 등록됐던 엘리먼트를 제거 한다.\n * @memberof eg.LazyLoaded\n * @function removeAutoSizer\n * @param {HTMLElement} element - Element to be removed\n * @param {string} prefix - data prefix of element to be removed\n * @example\n * ## HTML\n * ```html\n * <div>\n *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n * </div>\n * ```\n * ## Javascript\n * ```js\n * import { removeAutoSizer } from \"@egjs/lazyloaded\";\n *\n * if (target.getAttribute(\"data-width\")) {\n *   removeAutoSizer(target, \"data-\");\n * }\n * ```\n */\nexport { removeAutoSizer };\n"]},"metadata":{},"sourceType":"module"}