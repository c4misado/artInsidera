{"ast":null,"code":"var _jsxFileName = \"/home/work/Documents/wild-code/projects/art-gallery/src/components/ArtistModal.js\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport axios from \"axios\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport \"./ArtistList.css\";\nimport Masonry from \"react-masonry-css\";\n\nclass ArtistModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: [],\n      message: \"\",\n      breakpointsColumnsObj: {\n        default: 3,\n        1200: 3,\n        992: 2,\n        768: 1,\n        576: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.harvardartmuseums.org/object?size=30&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&person=\" + this.props.currentArtistID).then(response => {\n      console.log(response.data.records);\n      response.data.records.length > 0 && response.data.records[0].images && response.data.records[0].images.length > 0 ? this.setState({\n        works: response.data.records,\n        message: \"\"\n      }) : this.setState({\n        message: \"No images are available for this artist\"\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArtistDetails, {\n      name: this.props.currentArtistName,\n      date: this.props.currentArtistDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"ArtistWorks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      xl: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \" \", this.state.message === \"\" ? /*#__PURE__*/React.createElement(Masonry, {\n      breakpointCols: this.state.breakpointsColumnsObj,\n      className: \"artist-masonry-grid\",\n      columnClassName: \"artist-masonry-grid_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, this.state.works.map(work => work.primaryimageurl && work.images && work.images.length > 0 ? /*#__PURE__*/React.createElement(Container, {\n      key: work.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      fluid: true,\n      className: \"padded-image\",\n      className: \"img\",\n      src: work.primaryimageurl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }\n    })))) : null)) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, this.state.message))));\n  }\n\n}\n\nexport default ArtistModal;","map":{"version":3,"sources":["/home/work/Documents/wild-code/projects/art-gallery/src/components/ArtistModal.js"],"names":["React","Container","Row","Col","Image","axios","ArtistDetails","Masonry","ArtistModal","Component","constructor","props","state","works","message","breakpointsColumnsObj","default","componentDidMount","get","currentArtistID","then","response","console","log","data","records","length","images","setState","catch","error","render","currentArtistName","currentArtistDate","map","work","primaryimageurl","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport axios from \"axios\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport \"./ArtistList.css\";\nimport Masonry from \"react-masonry-css\";\n\nclass ArtistModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: [],\n      message: \"\",\n      breakpointsColumnsObj: {\n        default: 3,\n        1200: 3,\n        992: 2,\n        768: 1,\n        576: 1,\n      },\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(\n        \"https://api.harvardartmuseums.org/object?size=30&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&person=\" +\n          this.props.currentArtistID\n      )\n      .then((response) => {\n        console.log(response.data.records);\n        response.data.records.length > 0 &&\n        response.data.records[0].images &&\n        response.data.records[0].images.length > 0\n          ? this.setState({\n              works: response.data.records,\n              message: \"\",\n            })\n          : this.setState({\n              message: \"No images are available for this artist\",\n            });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <ArtistDetails\n          name={this.props.currentArtistName}\n          date={this.props.currentArtistDate}\n        />\n        <Row className=\"ArtistWorks\">\n          <Col md={12} xl={12} lg={12}>\n            {\" \"}\n            {this.state.message === \"\" ? (\n              <Masonry\n                breakpointCols={this.state.breakpointsColumnsObj}\n                className=\"artist-masonry-grid\"\n                columnClassName=\"artist-masonry-grid_column\"\n              >\n                {this.state.works.map((work) =>\n                  work.primaryimageurl &&\n                  work.images &&\n                  work.images.length > 0 ? (\n                    <Container key={work.id}>\n                      <Row>\n                        <Col md={12}>\n                          <Image\n                            fluid\n                            className=\"padded-image\"\n                            className=\"img\"\n                            src={work.primaryimageurl}\n                          />\n                        </Col>\n                      </Row>\n                    </Container>\n                  ) : null\n                )}\n              </Masonry>\n            ) : (\n              <h4>{this.state.message}</h4>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ArtistModal;\n"]},"metadata":{},"sourceType":"module"}