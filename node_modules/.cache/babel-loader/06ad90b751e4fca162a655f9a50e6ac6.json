{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\Wild Code School\\\\Projects\\\\art-gallery-react-project2\\\\bucharest-project2-art-gallery\\\\src\\\\components\\\\InfiniteScroll.js\";\nimport React, { Component } from \"react\";\nimport { GridLayout } from \"@egjs/react-infinitegrid\";\nimport ReactDOM from \"react-dom\";\nimport \"./infinite.css\";\n\nconst Item = ({\n  num\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"item\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"thumbnail\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: `https://naver.github.io/egjs-infinitegrid/assets/image/${num % 59 + 1}.jpg`,\n  alt: \"egjs\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, `egjs ${num}`));\n\nexport default class InfiniteScroll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: []\n    };\n\n    this.onAppend = ({\n      groupKey,\n      startLoading\n    }) => {\n      startLoading();\n      const list = this.state.list;\n      const items = this.loadItems((parseFloat(groupKey) || 0) + 1, 5);\n      this.setState({\n        list: list.concat(items)\n      });\n    };\n\n    this.onLayoutComplete = ({\n      isLayout,\n      endLoading\n    }) => {\n      !isLayout && endLoading();\n    };\n  }\n\n  loadItems(groupKey, num) {\n    const items = [];\n    const start = this.start || 0;\n\n    for (let i = 0; i < num; ++i) {\n      items.push( /*#__PURE__*/React.createElement(Item, {\n        groupKey: groupKey,\n        num: 1 + start + i,\n        key: start + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    this.start = start + num;\n    return items;\n  }\n\n  render() {\n    console.log(this.state.list);\n    return /*#__PURE__*/React.createElement(GridLayout, {\n      options: {\n        isConstantSize: true,\n        transitionDuration: 0.2\n      },\n      layoutOptions: {\n        margin: 10,\n        align: \"center\"\n      },\n      onAppend: this.onAppend,\n      onLayoutComplete: this.onLayoutComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.state.list);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Work/Desktop/Wild Code School/Projects/art-gallery-react-project2/bucharest-project2-art-gallery/src/components/InfiniteScroll.js"],"names":["React","Component","GridLayout","ReactDOM","Item","num","InfiniteScroll","state","list","onAppend","groupKey","startLoading","items","loadItems","parseFloat","setState","concat","onLayoutComplete","isLayout","endLoading","start","i","push","render","console","log","isConstantSize","transitionDuration","margin","align"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,gBAAP;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACX;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACE,EAAA,GAAG,EAAG,0DACHA,GAAG,GAAG,EAAP,GAAa,CACd,MAHH;AAIE,EAAA,GAAG,EAAC,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,eASE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,QAAOA,GAAI,EAAnC,CATF,CADF;;AAaA,eAAe,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpDM,KADoD,GAC5C;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAD4C;;AAAA,SAcpDC,QAdoD,GAczC,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,KAAgC;AACzCA,MAAAA,YAAY;AACZ,YAAMH,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,YAAMI,KAAK,GAAG,KAAKC,SAAL,CAAe,CAACC,UAAU,CAACJ,QAAD,CAAV,IAAwB,CAAzB,IAA8B,CAA7C,EAAgD,CAAhD,CAAd;AAEA,WAAKK,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEA,IAAI,CAACQ,MAAL,CAAYJ,KAAZ;AAAR,OAAd;AACD,KApBmD;;AAAA,SAqBpDK,gBArBoD,GAqBjC,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,KAA8B;AAC/C,OAACD,QAAD,IAAaC,UAAU,EAAvB;AACD,KAvBmD;AAAA;;AAEpDN,EAAAA,SAAS,CAACH,QAAD,EAAWL,GAAX,EAAgB;AACvB,UAAMO,KAAK,GAAG,EAAd;AACA,UAAMQ,KAAK,GAAG,KAAKA,KAAL,IAAc,CAA5B;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,GAApB,EAAyB,EAAEgB,CAA3B,EAA8B;AAC5BT,MAAAA,KAAK,CAACU,IAAN,eACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEZ,QAAhB;AAA0B,QAAA,GAAG,EAAE,IAAIU,KAAJ,GAAYC,CAA3C;AAA8C,QAAA,GAAG,EAAED,KAAK,GAAGC,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AACD,SAAKD,KAAL,GAAaA,KAAK,GAAGf,GAArB;AACA,WAAOO,KAAP;AACD;;AAYDW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWC,IAAvB;AACA,wBACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE;AACPkB,QAAAA,cAAc,EAAE,IADT;AAEPC,QAAAA,kBAAkB,EAAE;AAFb,OADX;AAKE,MAAA,aAAa,EAAE;AACbC,QAAAA,MAAM,EAAE,EADK;AAEbC,QAAAA,KAAK,EAAE;AAFM,OALjB;AASE,MAAA,QAAQ,EAAE,KAAKpB,QATjB;AAUE,MAAA,gBAAgB,EAAE,KAAKQ,gBAVzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,KAAKV,KAAL,CAAWC,IAZd,CADF;AAgBD;;AA3CmD","sourcesContent":["import React, { Component } from \"react\";\r\nimport { GridLayout } from \"@egjs/react-infinitegrid\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./infinite.css\";\r\nconst Item = ({ num }) => (\r\n  <div className=\"item\">\r\n    <div className=\"thumbnail\">\r\n      <img\r\n        src={`https://naver.github.io/egjs-infinitegrid/assets/image/${\r\n          (num % 59) + 1\r\n        }.jpg`}\r\n        alt=\"egjs\"\r\n      />\r\n    </div>\r\n    <div className=\"info\">{`egjs ${num}`}</div>\r\n  </div>\r\n);\r\nexport default class InfiniteScroll extends Component {\r\n  state = { list: [] };\r\n  loadItems(groupKey, num) {\r\n    const items = [];\r\n    const start = this.start || 0;\r\n\r\n    for (let i = 0; i < num; ++i) {\r\n      items.push(\r\n        <Item groupKey={groupKey} num={1 + start + i} key={start + i} />\r\n      );\r\n    }\r\n    this.start = start + num;\r\n    return items;\r\n  }\r\n  onAppend = ({ groupKey, startLoading }) => {\r\n    startLoading();\r\n    const list = this.state.list;\r\n    const items = this.loadItems((parseFloat(groupKey) || 0) + 1, 5);\r\n\r\n    this.setState({ list: list.concat(items) });\r\n  };\r\n  onLayoutComplete = ({ isLayout, endLoading }) => {\r\n    !isLayout && endLoading();\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.list);\r\n    return (\r\n      <GridLayout\r\n        options={{\r\n          isConstantSize: true,\r\n          transitionDuration: 0.2,\r\n        }}\r\n        layoutOptions={{\r\n          margin: 10,\r\n          align: \"center\",\r\n        }}\r\n        onAppend={this.onAppend}\r\n        onLayoutComplete={this.onLayoutComplete}\r\n      >\r\n        {this.state.list}\r\n      </GridLayout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}