{"ast":null,"code":"var _jsxFileName = \"/home/work/Documents/wild-code/projects/art-gallery/src/components/ArtistModal.js\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport axios from \"axios\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport \"./ArtistList.css\";\nimport Masonry from \"react-masonry-css\";\n\nclass ArtistModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: [],\n      message: \"\",\n      breakpointsColumnsObj: {\n        default: 3,\n        1200: 3,\n        992: 2,\n        768: 1,\n        576: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.harvardartmuseums.org/object?size=30&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&person=\" + this.props.currentArtistID).then(response => {\n      console.log(response.data.records);\n      response.data.records.length > 0 && response.data.records[0].images && response.data.records[0].images.length > 0 ? this.setState({\n        works: response.data.records,\n        message: \"\"\n      }) : this.setState({\n        message: \"No images are available for this artist\"\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ArtistDetails, {\n      name: this.props.currentArtistName,\n      date: this.props.currentArtistDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"ArtistWorks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      xl: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    }, \" \", this.state.message === \"\" ? /*#__PURE__*/React.createElement(Masonry, {\n      breakpointCols: this.state.breakpointsColumnsObj,\n      className: \"artist-masonry-grid\",\n      columnClassName: \"artist-masonry-grid_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 8\n      }\n    }, this.state.works.map(work => work.primaryimageurl && work.images && work.images.length > 0 ? /*#__PURE__*/React.createElement(Container, {\n      key: work.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      fluid: true,\n      className: \"padded-image\",\n      className: \"img\",\n      src: work.primaryimageurl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }\n    })))) : null)) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }\n    }, this.state.message))));\n  }\n\n}\n\nexport default ArtistModal;","map":{"version":3,"sources":["/home/work/Documents/wild-code/projects/art-gallery/src/components/ArtistModal.js"],"names":["React","Container","Row","Col","Image","axios","ArtistDetails","Masonry","ArtistModal","Component","constructor","props","state","works","message","breakpointsColumnsObj","default","componentDidMount","get","currentArtistID","then","response","console","log","data","records","length","images","setState","catch","error","render","currentArtistName","currentArtistDate","map","work","primaryimageurl","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport axios from \"axios\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport \"./ArtistList.css\";\nimport Masonry from \"react-masonry-css\";\n\nclass ArtistModal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tworks: [],\n\t\t\tmessage: \"\",\n\t\t\tbreakpointsColumnsObj: {\n\t\t\t\tdefault: 3,\n\t\t\t\t1200: 3,\n\t\t\t\t992: 2,\n\t\t\t\t768: 1,\n\t\t\t\t576: 1,\n\t\t\t},\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(\"https://api.harvardartmuseums.org/object?size=30&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&person=\" + this.props.currentArtistID)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.records);\n\t\t\t\tresponse.data.records.length > 0 && response.data.records[0].images && response.data.records[0].images.length > 0\n\t\t\t\t\t? this.setState({\n\t\t\t\t\t\t\tworks: response.data.records,\n\t\t\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t  })\n\t\t\t\t\t: this.setState({\n\t\t\t\t\t\t\tmessage: \"No images are available for this artist\",\n\t\t\t\t\t  });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<ArtistDetails name={this.props.currentArtistName} date={this.props.currentArtistDate} />\n\t\t\t\t<Row className=\"ArtistWorks\">\n\t\t\t\t\t<Col md={12} xl={12} lg={12}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t{this.state.message === \"\" ? (\n\t\t\t\t\t\t\t<Masonry\n\t\t\t\t\t\t\t\tbreakpointCols={this.state.breakpointsColumnsObj}\n\t\t\t\t\t\t\t\tclassName=\"artist-masonry-grid\"\n\t\t\t\t\t\t\t\tcolumnClassName=\"artist-masonry-grid_column\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.works.map((work) =>\n\t\t\t\t\t\t\t\t\twork.primaryimageurl && work.images && work.images.length > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<Container key={work.id}>\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Image fluid className=\"padded-image\" className=\"img\" src={work.primaryimageurl} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Masonry>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h4>{this.state.message}</h4>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ArtistModal;\n"]},"metadata":{},"sourceType":"module"}