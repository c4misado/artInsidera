{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\Wild Code School\\\\Projects\\\\art-gallery-react-project2\\\\bucharest-project2-art-gallery\\\\src\\\\components\\\\ArtistList.js\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ArtistModal from \"./ArtistModal\"; // import Modal from \"react-modal\";\n\nimport axios from \"axios\";\nimport \"./ArtistList.css\";\n\nclass ArtistList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = () => {\n      console.log(\"closing modal\");\n      this.setState({\n        isModalOpen: false\n      });\n    };\n\n    this.openModal = (id, name, date) => {\n      console.log(\"opening modal\");\n      console.log(name, date);\n      this.setState({\n        isModalOpen: true,\n        currentArtistID: id,\n        currentArtistName: name,\n        currentArtistDate: date\n      });\n    };\n\n    this.state = {\n      artists: [],\n      isModalOpen: false,\n      currentArtistID: 0,\n      currentArtistName: \"\",\n      currentArtistDate: null\n    };\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchNextPage = this.fetchPrevPage.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.harvardartmuseums.org/person?&size=99&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&sort=objectcount&sortorder=desc\").then(response => {\n      // console.log(response);\n      this.setState({\n        artists: response.data.records,\n        next: response.data.info.next\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  fetchNextPage() {\n    axios.get(this.state.next).then(res => res.data).then(response => this.setState({\n      artists: response.data.records,\n      next: response.data.info.next,\n      prev: response.data.info.prev\n    }));\n  }\n\n  fetchPrevPage() {\n    axios.get(this.state.prev).then(res => res.data).then(response => this.setState({\n      artists: response.data.records,\n      next: response.data.info.next,\n      prev: response.data.info.prev\n    }));\n  }\n\n  render() {\n    let artists1 = this.state.artists.slice(0, 33);\n    let artists2 = this.state.artists.slice(33, 66);\n    let artists3 = this.state.artists.slice(66, 99);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"ARTISTS\"), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.isModalOpen,\n      onHide: this.closeModal,\n      dialogClassName: \"modal-detail\",\n      \"aria-labelledby\": \"artist-details\",\n      scrollable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalTitle, {\n      id: \"artist-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Artist Details\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArtistModal, {\n      currentArtistID: this.state.currentArtistID,\n      currentArtistName: this.state.currentArtistName,\n      currentArtistDate: this.state.currentArtistDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"ArtistList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, artists1.map(artist => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        onClick: this.openModal.bind(this, artist.id, artist.displayname, artist.displaydate),\n        key: artist.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, artist.displayname);\n    }))), /*#__PURE__*/React.createElement(Col, {\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, artists2.map(artist => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        onClick: this.openModal.bind(this, artist.id, artist.displayname, artist.displaydate),\n        key: artist.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, artist.displayname);\n    }))), /*#__PURE__*/React.createElement(Col, {\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, artists3.map(artist => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        onClick: this.openModal.bind(this, artist.id, artist.displayname, artist.displaydate),\n        key: artist.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      }, artist.displayname);\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, this.state.prev ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.fetchPrevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \"Previous Page\") : null, this.state.prev ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.fetchNextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Next Page\") : null));\n  }\n\n}\n\nexport default ArtistList;","map":{"version":3,"sources":["C:/Users/Work/Desktop/Wild Code School/Projects/art-gallery-react-project2/bucharest-project2-art-gallery/src/components/ArtistList.js"],"names":["React","Container","Row","Col","Modal","ModalTitle","ModalHeader","ModalBody","ArtistModal","axios","ArtistList","Component","constructor","props","closeModal","console","log","setState","isModalOpen","openModal","id","name","date","currentArtistID","currentArtistName","currentArtistDate","state","artists","fetchNextPage","bind","fetchPrevPage","componentDidMount","get","then","response","data","records","next","info","catch","error","res","prev","render","artists1","slice","artists2","artists3","map","artist","displayname","displaydate"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport ModalBody from \"react-bootstrap/ModalBody\";\r\nimport ArtistModal from \"./ArtistModal\";\r\n// import Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\nimport \"./ArtistList.css\";\r\n\r\nclass ArtistList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      artists: [],\r\n      isModalOpen: false,\r\n      currentArtistID: 0,\r\n      currentArtistName: \"\",\r\n      currentArtistDate: null,\r\n    };\r\n    this.fetchNextPage = this.fetchNextPage.bind(this);\r\n    this.fetchNextPage = this.fetchPrevPage.bind(this);\r\n  }\r\n  closeModal = () => {\r\n    console.log(\"closing modal\");\r\n    this.setState({\r\n      isModalOpen: false,\r\n    });\r\n  };\r\n  openModal = (id, name, date) => {\r\n    console.log(\"opening modal\");\r\n    console.log(name, date);\r\n    this.setState({\r\n      isModalOpen: true,\r\n      currentArtistID: id,\r\n      currentArtistName: name,\r\n      currentArtistDate: date,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.harvardartmuseums.org/person?&size=99&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&sort=objectcount&sortorder=desc\"\r\n      )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        this.setState({\r\n          artists: response.data.records,\r\n          next: response.data.info.next,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  fetchNextPage() {\r\n    axios\r\n      .get(this.state.next)\r\n      .then((res) => res.data)\r\n      .then((response) =>\r\n        this.setState({\r\n          artists: response.data.records,\r\n          next: response.data.info.next,\r\n          prev: response.data.info.prev,\r\n        })\r\n      );\r\n  }\r\n  fetchPrevPage() {\r\n    axios\r\n      .get(this.state.prev)\r\n      .then((res) => res.data)\r\n      .then((response) =>\r\n        this.setState({\r\n          artists: response.data.records,\r\n          next: response.data.info.next,\r\n          prev: response.data.info.prev,\r\n        })\r\n      );\r\n  }\r\n  render() {\r\n    let artists1 = this.state.artists.slice(0, 33);\r\n    let artists2 = this.state.artists.slice(33, 66);\r\n    let artists3 = this.state.artists.slice(66, 99);\r\n    return (\r\n      <Container>\r\n        <h1>ARTISTS</h1>\r\n        {/* <Modal ariaHideApp={false} isOpen={this.state.isModalOpen}>\r\n          <div className=\"closemodal\">\r\n            <button onClick={this.closeModal}>X</button>\r\n          </div>\r\n          <ArtistPopUp />\r\n        </Modal> */}\r\n        <Modal\r\n          show={this.state.isModalOpen}\r\n          onHide={this.closeModal}\r\n          dialogClassName=\"modal-detail\"\r\n          aria-labelledby=\"artist-details\"\r\n          scrollable={true}\r\n        >\r\n          <ModalHeader closeButton>\r\n            <ModalTitle id=\"artist-details\">Artist Details</ModalTitle>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <ArtistModal\r\n              currentArtistID={this.state.currentArtistID}\r\n              currentArtistName={this.state.currentArtistName}\r\n              currentArtistDate={this.state.currentArtistDate}\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n        <Row className=\"ArtistList\">\r\n          <Col lg={4} md={4} sm={12} xs={12}>\r\n            <ul>\r\n              {artists1.map((artist) => {\r\n                return (\r\n                  <li\r\n                    onClick={this.openModal.bind(\r\n                      this,\r\n                      artist.id,\r\n                      artist.displayname,\r\n                      artist.displaydate\r\n                    )}\r\n                    key={artist.id}\r\n                  >\r\n                    {artist.displayname}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </Col>\r\n          <Col lg={4} md={4} sm={12} xs={12}>\r\n            <ul>\r\n              {artists2.map((artist) => {\r\n                return (\r\n                  <li\r\n                    onClick={this.openModal.bind(\r\n                      this,\r\n                      artist.id,\r\n                      artist.displayname,\r\n                      artist.displaydate\r\n                    )}\r\n                    key={artist.id}\r\n                  >\r\n                    {artist.displayname}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </Col>\r\n          <Col lg={4} md={4} sm={12} xs={12}>\r\n            <ul>\r\n              {artists3.map((artist) => {\r\n                return (\r\n                  <li\r\n                    onClick={this.openModal.bind(\r\n                      this,\r\n                      artist.id,\r\n                      artist.displayname,\r\n                      artist.displaydate\r\n                    )}\r\n                    key={artist.id}\r\n                  >\r\n                    {artist.displayname}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {this.state.prev ? (\r\n            <button onClick={this.fetchPrevPage}>Previous Page</button>\r\n          ) : null}\r\n          {this.state.prev ? (\r\n            <button onClick={this.fetchNextPage}>Next Page</button>\r\n          ) : null}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArtistList;\r\n"]},"metadata":{},"sourceType":"module"}