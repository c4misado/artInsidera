{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\Wild Code School\\\\Projects\\\\art-gallery-react-project2\\\\bucharest-project2-art-gallery\\\\src\\\\components\\\\MGal.js\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Masonry from \"react-masonry-css\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./mgal.css\";\nimport GalleryItem from \"./GalleryItem\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { StyledUl } from \"./styled-components/StyledUl\";\nimport FilterItem from \"./FilterItem\";\nimport { categs } from \"./resources/categs\";\nimport { periods } from \"./resources/periods\";\nimport { technique } from \"./resources/technique\";\nimport { FilterToggleLink } from \"./styled-components/FilterToggleLink\";\nimport { FiltersWrapper } from \"./styled-components/FiltersWrapper\";\nconst StyledCol = styled(Col)`\n  background-color: #ffffff;\n`;\nexport default class MGal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikey: \"221b4e10-7bc5-11ea-8865-8f439f2941d8\",\n      imagesList: [],\n      prev: null,\n      next: null,\n      categories: categs,\n      periods: periods,\n      technique: technique,\n      filter: null,\n      breakpointsColumnsObj: {\n        default: 3,\n        1200: 2,\n        992: 2,\n        768: 1,\n        576: 1\n      }\n    };\n    this.fetchNextImages = this.fetchNextImages.bind(this);\n    this.fetchImages = this.fetchImages.bind(this);\n    this.filterCall = this.filterCall.bind(this);\n    this.showFilter = this.showFilter.bind(this);\n  }\n\n  fetchNextImages() {\n    axios.get(this.state.next).then(res => res.data).then(data => {\n      this.setState({\n        imagesList: [...this.state.imagesList, ...data.records],\n        next: data.info.next,\n        prev: data.info.prev\n      });\n    });\n  }\n\n  fetchImages() {\n    axios.get(this.state.next).then(res => res.data).then(data => {\n      this.setState({\n        imagesList: data.records,\n        next: data.info.next,\n        prev: data.info.prev\n      });\n    });\n  }\n\n  filterCall(event, filter) {\n    axios.get(`https://api.harvardartmuseums.org/object?size=20&page=1&apikey=${this.state.apikey}&${filter}=${event.target.innerText}&hasimage=1`).then(res => res.data).then(data => this.setState({\n      imagesList: data.records,\n      next: data.info.next,\n      prev: data.info.prev\n    }));\n  }\n\n  showFilter(filter) {\n    console.log(\"clicked\");\n\n    switch (filter) {\n      case \"classification\":\n        return /*#__PURE__*/React.createElement(StyledUl, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }, this.state.categories.sort().map(e => /*#__PURE__*/React.createElement(FilterItem, {\n          name: e,\n          function: event => this.filterCall(event, filter),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        })), \" \");\n\n      case \"period\":\n        return /*#__PURE__*/React.createElement(StyledUl, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }\n        }, this.state.periods.sort().map(e => /*#__PURE__*/React.createElement(FilterItem, {\n          name: e,\n          function: event => this.filterCall(event, \"period\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        })), \" \");\n\n      case \"technique\":\n        return /*#__PURE__*/React.createElement(StyledUl, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }\n        }, this.state.technique.sort().map(e => /*#__PURE__*/React.createElement(FilterItem, {\n          name: e,\n          function: () => this.filterCall(filter),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        })), \" \");\n\n      default:\n        return null;\n    }\n  }\n\n  componentDidMount() {\n    axios.get(`https://api.harvardartmuseums.org/object?size=20&page=1&apikey=${this.state.apikey}&hasimage=1`).then(res => res.data).then(data => {\n      this.setState({\n        imagesList: data.records,\n        next: data.info.next,\n        prev: data.info.prev\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(StyledCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ButtonWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FilterToggleLink, {\n      onClick: () => this.state.filter !== \"classification\" ? this.setState({\n        filter: \"classification\"\n      }) : this.setState({\n        filter: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"classification\"), /*#__PURE__*/React.createElement(FilterToggleLink, {\n      onClick: () => this.state.filter !== \"period\" ? this.setState({\n        filter: \"period\"\n      }) : this.setState({\n        filter: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"periods\"), /*#__PURE__*/React.createElement(FilterToggleLink, {\n      onClick: () => this.state.filter !== \"technique\" ? this.setState({\n        filter: \"technique\"\n      }) : this.setState({\n        filter: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, \"technique\")), this.showFilter(this.state.filter)), /*#__PURE__*/React.createElement(StyledCol, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: () => this.fetchNextImages(),\n      hasMore: this.state.next != null ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Masonry, {\n      breakpointCols: this.state.breakpointsColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, this.state.imagesList.map(record => record.images.length > 0 ? /*#__PURE__*/React.createElement(GalleryItem, {\n      url: record.primaryimageurl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }) : null))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Work/Desktop/Wild Code School/Projects/art-gallery-react-project2/bucharest-project2-art-gallery/src/components/MGal.js"],"names":["React","Component","styled","axios","Masonry","Button","Container","Row","Col","GalleryItem","InfiniteScroll","StyledUl","FilterItem","categs","periods","technique","FilterToggleLink","FiltersWrapper","StyledCol","MGal","constructor","props","state","apikey","imagesList","prev","next","categories","filter","breakpointsColumnsObj","default","fetchNextImages","bind","fetchImages","filterCall","showFilter","get","then","res","data","setState","records","info","event","target","innerText","console","log","sort","map","e","componentDidMount","render","record","images","length","primaryimageurl"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./mgal.css\";\r\nimport GalleryItem from \"./GalleryItem\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { StyledUl } from \"./styled-components/StyledUl\";\r\nimport FilterItem from \"./FilterItem\";\r\nimport { categs } from \"./resources/categs\";\r\nimport { periods } from \"./resources/periods\";\r\nimport { technique } from \"./resources/technique\";\r\nimport { FilterToggleLink } from \"./styled-components/FilterToggleLink\";\r\nimport { FiltersWrapper } from \"./styled-components/FiltersWrapper\";\r\n\r\nconst StyledCol = styled(Col)`\r\n  background-color: #ffffff;\r\n`;\r\n\r\nexport default class MGal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      apikey: \"221b4e10-7bc5-11ea-8865-8f439f2941d8\",\r\n      imagesList: [],\r\n      prev: null,\r\n      next: null,\r\n      categories: categs,\r\n      periods: periods,\r\n      technique: technique,\r\n      filter: null,\r\n      breakpointsColumnsObj: {\r\n        default: 3,\r\n        1200: 2,\r\n        992: 2,\r\n        768: 1,\r\n        576: 1,\r\n      },\r\n    };\r\n    this.fetchNextImages = this.fetchNextImages.bind(this);\r\n    this.fetchImages = this.fetchImages.bind(this);\r\n    this.filterCall = this.filterCall.bind(this);\r\n    this.showFilter = this.showFilter.bind(this);\r\n  }\r\n  fetchNextImages() {\r\n    axios\r\n      .get(this.state.next)\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        this.setState({\r\n          imagesList: [...this.state.imagesList, ...data.records],\r\n          next: data.info.next,\r\n          prev: data.info.prev,\r\n        });\r\n      });\r\n  }\r\n\r\n  fetchImages() {\r\n    axios\r\n      .get(this.state.next)\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        this.setState({\r\n          imagesList: data.records,\r\n          next: data.info.next,\r\n          prev: data.info.prev,\r\n        });\r\n      });\r\n  }\r\n\r\n  filterCall(event, filter) {\r\n    axios\r\n      .get(\r\n        `https://api.harvardartmuseums.org/object?size=20&page=1&apikey=${this.state.apikey}&${filter}=${event.target.innerText}&hasimage=1`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) =>\r\n        this.setState({\r\n          imagesList: data.records,\r\n          next: data.info.next,\r\n          prev: data.info.prev,\r\n        })\r\n      );\r\n  }\r\n\r\n  showFilter(filter) {\r\n    console.log(\"clicked\");\r\n    switch (filter) {\r\n      case \"classification\":\r\n        return (\r\n          <StyledUl>\r\n            {this.state.categories.sort().map((e) => (\r\n              <FilterItem\r\n                name={e}\r\n                function={(event) => this.filterCall(event, filter)}\r\n              ></FilterItem>\r\n            ))}{\" \"}\r\n          </StyledUl>\r\n        );\r\n      case \"period\":\r\n        return (\r\n          <StyledUl>\r\n            {this.state.periods.sort().map((e) => (\r\n              <FilterItem\r\n                name={e}\r\n                function={(event) => this.filterCall(event, \"period\")}\r\n              ></FilterItem>\r\n            ))}{\" \"}\r\n          </StyledUl>\r\n        );\r\n\r\n      case \"technique\":\r\n        return (\r\n          <StyledUl>\r\n            {this.state.technique.sort().map((e) => (\r\n              <FilterItem\r\n                name={e}\r\n                function={() => this.filterCall(filter)}\r\n              ></FilterItem>\r\n            ))}{\" \"}\r\n          </StyledUl>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://api.harvardartmuseums.org/object?size=20&page=1&apikey=${this.state.apikey}&hasimage=1`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        this.setState({\r\n          imagesList: data.records,\r\n          next: data.info.next,\r\n          prev: data.info.prev,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          {\" \"}\r\n          <StyledCol>\r\n            <ButtonWrapper>\r\n              <FilterToggleLink\r\n                onClick={() =>\r\n                  this.state.filter !== \"classification\"\r\n                    ? this.setState({ filter: \"classification\" })\r\n                    : this.setState({ filter: null })\r\n                }\r\n              >\r\n                classification\r\n              </FilterToggleLink>\r\n\r\n              <FilterToggleLink\r\n                onClick={() =>\r\n                  this.state.filter !== \"period\"\r\n                    ? this.setState({ filter: \"period\" })\r\n                    : this.setState({ filter: null })\r\n                }\r\n              >\r\n                periods\r\n              </FilterToggleLink>\r\n              <FilterToggleLink\r\n                onClick={() =>\r\n                  this.state.filter !== \"technique\"\r\n                    ? this.setState({ filter: \"technique\" })\r\n                    : this.setState({ filter: null })\r\n                }\r\n              >\r\n                technique\r\n              </FilterToggleLink>\r\n            </ButtonWrapper>\r\n            {this.showFilter(this.state.filter)}\r\n          </StyledCol>\r\n          <StyledCol md={12}>\r\n            <InfiniteScroll\r\n              pageStart={0}\r\n              loadMore={() => this.fetchNextImages()}\r\n              hasMore={this.state.next != null ? true : false}\r\n            >\r\n              <Masonry\r\n                breakpointCols={this.state.breakpointsColumnsObj}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\"\r\n              >\r\n                {this.state.imagesList.map((record) =>\r\n                  record.images.length > 0 ? (\r\n                    <GalleryItem url={record.primaryimageurl}></GalleryItem>\r\n                  ) : null\r\n                )}\r\n              </Masonry>\r\n            </InfiniteScroll>\r\n          </StyledCol>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}