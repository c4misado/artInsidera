{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\Wild Code School\\\\Projects\\\\art-gallery-react-project2\\\\bucharest-project2-art-gallery\\\\src\\\\components\\\\ArtistModal.js\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport axios from \"axios\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport ArtistWorks from \"./ArtistWorks\";\nimport \"./ArtistList.css\";\nimport Masonry from \"react-masonry-css\";\n\nclass ArtistModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: [],\n      message: \"Loading...\",\n      breakpointsColumnsObj: {\n        default: 3,\n        1200: 3,\n        992: 2,\n        768: 1,\n        576: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.harvardartmuseums.org/object?size=30&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&person=\" + this.props.currentArtistID).then(response => {\n      console.log(response);\n      this.setState({\n        works: response.data.records\n      });\n    }).catch(error => {\n      console.log(error);\n    }); // if (this.state.works.length < 1) {\n    //   imageHTML = (\n    //     <Col key=\"c1\" md={12} className=\"text-center text-danger h5\">\n    //       setTimeout(() =>{\" \"}\n    //       {this.setState({\n    //         message: \"No images are available for this artist\",\n    //       })}\n    //       , 3000);\n    //     </Col>\n    //   );\n    // }\n  }\n\n  render() {\n    let imageCount = 0;\n    let imageHTML = this.state.works.map(work => {\n      if (work.primaryimageurl) {\n        imageCount++;\n        return /*#__PURE__*/React.createElement(Image, {\n          key: work.id,\n          className: \"img\",\n          src: work.primaryimageurl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        });\n      }\n    });\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArtistDetails, {\n      name: this.props.currentArtistName,\n      date: this.props.currentArtistDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"ArtistWorks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      xl: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \" \", this.state.works.length > 0 ? /*#__PURE__*/React.createElement(Masonry, {\n      breakpointCols: this.state.breakpointsColumnsObj,\n      className: \"artist-masonry-grid\",\n      columnClassName: \"artist-masonry-grid_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, this.state.works.map(work => work.primaryimageurl && work.images && work.images.length > 0 ? /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      fluid: true,\n      className: \"padded-image\",\n      key: work.id,\n      className: \"img\",\n      src: work.primaryimageurl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }\n    })))) : null)) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"something\"))));\n  }\n\n}\n\nexport default ArtistModal;","map":{"version":3,"sources":["C:/Users/Work/Desktop/Wild Code School/Projects/art-gallery-react-project2/bucharest-project2-art-gallery/src/components/ArtistModal.js"],"names":["React","Container","Row","Col","Image","axios","ArtistDetails","ArtistWorks","Masonry","ArtistModal","Component","constructor","props","state","works","message","breakpointsColumnsObj","default","componentDidMount","get","currentArtistID","then","response","console","log","setState","data","records","catch","error","render","imageCount","imageHTML","map","work","primaryimageurl","id","currentArtistName","currentArtistDate","length","images"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport axios from \"axios\";\r\nimport ArtistDetails from \"./ArtistDetails\";\r\nimport ArtistWorks from \"./ArtistWorks\";\r\nimport \"./ArtistList.css\";\r\nimport Masonry from \"react-masonry-css\";\r\n\r\nclass ArtistModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      works: [],\r\n      message: \"Loading...\",\r\n      breakpointsColumnsObj: {\r\n        default: 3,\r\n        1200: 3,\r\n        992: 2,\r\n        768: 1,\r\n        576: 1,\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.harvardartmuseums.org/object?size=30&apikey=912dd280-8897-11ea-953e-e1f9ff450a61&person=\" +\r\n          this.props.currentArtistID\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          works: response.data.records,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // if (this.state.works.length < 1) {\r\n    //   imageHTML = (\r\n    //     <Col key=\"c1\" md={12} className=\"text-center text-danger h5\">\r\n    //       setTimeout(() =>{\" \"}\r\n    //       {this.setState({\r\n    //         message: \"No images are available for this artist\",\r\n    //       })}\r\n    //       , 3000);\r\n    //     </Col>\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    let imageCount = 0;\r\n    let imageHTML = this.state.works.map((work) => {\r\n      if (work.primaryimageurl) {\r\n        imageCount++;\r\n        return (\r\n          <Image key={work.id} className=\"img\" src={work.primaryimageurl} />\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Container fluid>\r\n        <ArtistDetails\r\n          name={this.props.currentArtistName}\r\n          date={this.props.currentArtistDate}\r\n        />\r\n        <Row className=\"ArtistWorks\">\r\n          <Col md={12} xl={12} lg={12}>\r\n            {\" \"}\r\n            {this.state.works.length > 0 ? (\r\n              <Masonry\r\n                breakpointCols={this.state.breakpointsColumnsObj}\r\n                className=\"artist-masonry-grid\"\r\n                columnClassName=\"artist-masonry-grid_column\"\r\n              >\r\n                {this.state.works.map((work) =>\r\n                  work.primaryimageurl &&\r\n                  work.images &&\r\n                  work.images.length > 0 ? (\r\n                    <Container>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <Image\r\n                            fluid\r\n                            className=\"padded-image\"\r\n                            key={work.id}\r\n                            className=\"img\"\r\n                            src={work.primaryimageurl}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  ) : null\r\n                )}\r\n              </Masonry>\r\n            ) : (\r\n              <h1>something</h1>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArtistModal;\r\n"]},"metadata":{},"sourceType":"module"}