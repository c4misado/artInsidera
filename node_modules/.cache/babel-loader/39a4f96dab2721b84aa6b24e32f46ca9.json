{"ast":null,"code":"import React from 'react';\nconst {\n  useEffect,\n  useCallback,\n  useState,\n  useRef\n} = React;\nconst perf = typeof performance !== 'undefined' ? performance : Date;\n\nconst now = () => perf.now();\n\nexport const useThrottleCallback = (callback, fps = 30, leading = false) => {\n  const wait = 1000 / fps;\n  const prev = useRef(0);\n  const trailingTimeout = useRef(void 0);\n\n  const clearTrailing = () => clearTimeout(trailingTimeout.current);\n\n  const deps = [callback, fps, leading]; // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0;\n    clearTrailing();\n  }\n\n  useEffect(() => _ref, deps);\n  return useCallback(function () {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this; // eslint-disable-next-line prefer-rest-params\n\n    const args = arguments;\n    const rightNow = now();\n\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing();\n      callback.apply(self, args);\n    };\n\n    const current = prev.current; // leading\n\n    if (leading && current === 0) return call(); // body\n\n    if (rightNow - current > wait) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    } // trailing\n\n\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      callback.apply(self, args);\n      prev.current = 0;\n    }, wait);\n  }, deps);\n};\nexport const useThrottle = (initialState, fps, leading) => {\n  const ref = useState(initialState);\n  return [ref[0], useThrottleCallback(ref[1], fps, leading)];\n};\nexport default useThrottle;","map":{"version":3,"sources":["C:/Users/Work/Desktop/Wild Code School/Projects/art-gallery-react-project2/bucharest-project2-art-gallery/node_modules/@react-hook/throttle/dist/module/index.js"],"names":["React","useEffect","useCallback","useState","useRef","perf","performance","Date","now","useThrottleCallback","callback","fps","leading","wait","prev","trailingTimeout","clearTrailing","clearTimeout","current","deps","_ref","self","args","arguments","rightNow","call","apply","setTimeout","useThrottle","initialState","ref"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAM;AAACC,EAAAA,SAAD;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,IAA6CJ,KAAnD;AACA,MAAMK,IAAI,GAAG,OAAOC,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmDC,IAAhE;;AAEA,MAAMC,GAAG,GAAG,MAAMH,IAAI,CAACG,GAAL,EAAlB;;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,GAAG,GAAG,EAAjB,EAAqBC,OAAO,GAAG,KAA/B,KAAyC;AAC1E,QAAMC,IAAI,GAAG,OAAOF,GAApB;AACA,QAAMG,IAAI,GAAGV,MAAM,CAAC,CAAD,CAAnB;AACA,QAAMW,eAAe,GAAGX,MAAM,CAAC,KAAK,CAAN,CAA9B;;AAEA,QAAMY,aAAa,GAAG,MAAMC,YAAY,CAACF,eAAe,CAACG,OAAjB,CAAxC;;AAEA,QAAMC,IAAI,GAAG,CAACT,QAAD,EAAWC,GAAX,EAAgBC,OAAhB,CAAb,CAP0E,CAOpC;;AAEtC,WAASQ,IAAT,GAAgB;AACdN,IAAAA,IAAI,CAACI,OAAL,GAAe,CAAf;AACAF,IAAAA,aAAa;AACd;;AAEDf,EAAAA,SAAS,CAAC,MAAMmB,IAAP,EAAaD,IAAb,CAAT;AACA,SAAOjB,WAAW,CAAC,YAAY;AAC7B;AACA,UAAMmB,IAAI,GAAG,IAAb,CAF6B,CAEX;;AAElB,UAAMC,IAAI,GAAGC,SAAb;AACA,UAAMC,QAAQ,GAAGhB,GAAG,EAApB;;AAEA,UAAMiB,IAAI,GAAG,MAAM;AACjBX,MAAAA,IAAI,CAACI,OAAL,GAAeM,QAAf;AACAR,MAAAA,aAAa;AACbN,MAAAA,QAAQ,CAACgB,KAAT,CAAeL,IAAf,EAAqBC,IAArB;AACD,KAJD;;AAMA,UAAMJ,OAAO,GAAGJ,IAAI,CAACI,OAArB,CAb6B,CAaA;;AAE7B,QAAIN,OAAO,IAAIM,OAAO,KAAK,CAA3B,EAA8B,OAAOO,IAAI,EAAX,CAfD,CAee;;AAE5C,QAAID,QAAQ,GAAGN,OAAX,GAAqBL,IAAzB,EAA+B;AAC7B,UAAIK,OAAO,GAAG,CAAd,EAAiB,OAAOO,IAAI,EAAX;AACjBX,MAAAA,IAAI,CAACI,OAAL,GAAeM,QAAf;AACD,KApB4B,CAoB3B;;;AAEFR,IAAAA,aAAa;AACbD,IAAAA,eAAe,CAACG,OAAhB,GAA0BS,UAAU,CAAC,MAAM;AACzCjB,MAAAA,QAAQ,CAACgB,KAAT,CAAeL,IAAf,EAAqBC,IAArB;AACAR,MAAAA,IAAI,CAACI,OAAL,GAAe,CAAf;AACD,KAHmC,EAGjCL,IAHiC,CAApC;AAID,GA3BiB,EA2BfM,IA3Be,CAAlB;AA4BD,CA3CM;AA4CP,OAAO,MAAMS,WAAW,GAAG,CAACC,YAAD,EAAelB,GAAf,EAAoBC,OAApB,KAAgC;AACzD,QAAMkB,GAAG,GAAG3B,QAAQ,CAAC0B,YAAD,CAApB;AACA,SAAO,CAACC,GAAG,CAAC,CAAD,CAAJ,EAASrB,mBAAmB,CAACqB,GAAG,CAAC,CAAD,CAAJ,EAASnB,GAAT,EAAcC,OAAd,CAA5B,CAAP;AACD,CAHM;AAIP,eAAegB,WAAf","sourcesContent":["import React from 'react'\nconst {useEffect, useCallback, useState, useRef} = React\nconst perf = typeof performance !== 'undefined' ? performance : Date\n\nconst now = () => perf.now()\n\nexport const useThrottleCallback = (callback, fps = 30, leading = false) => {\n  const wait = 1000 / fps\n  const prev = useRef(0)\n  const trailingTimeout = useRef(void 0)\n\n  const clearTrailing = () => clearTimeout(trailingTimeout.current)\n\n  const deps = [callback, fps, leading] // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0\n    clearTrailing()\n  }\n\n  useEffect(() => _ref, deps)\n  return useCallback(function () {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this // eslint-disable-next-line prefer-rest-params\n\n    const args = arguments\n    const rightNow = now()\n\n    const call = () => {\n      prev.current = rightNow\n      clearTrailing()\n      callback.apply(self, args)\n    }\n\n    const current = prev.current // leading\n\n    if (leading && current === 0) return call() // body\n\n    if (rightNow - current > wait) {\n      if (current > 0) return call()\n      prev.current = rightNow\n    } // trailing\n\n    clearTrailing()\n    trailingTimeout.current = setTimeout(() => {\n      callback.apply(self, args)\n      prev.current = 0\n    }, wait)\n  }, deps)\n}\nexport const useThrottle = (initialState, fps, leading) => {\n  const ref = useState(initialState)\n  return [ref[0], useThrottleCallback(ref[1], fps, leading)]\n}\nexport default useThrottle\n"]},"metadata":{},"sourceType":"module"}