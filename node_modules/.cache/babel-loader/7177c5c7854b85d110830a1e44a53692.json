{"ast":null,"code":"let u = 'undefined',\n    win = typeof window !== u ? window : {},\n    p = typeof performance !== u ? performance : Date,\n    now = () => p.now(),\n    af = 'AnimationFrame',\n    Caf = 'cancel' + af,\n    Raf = 'request' + af,\n    raf = win[Raf] && win[Raf].bind(win),\n    caf = win[Caf] && win[Caf].bind(win);\n\nfunction _ref(h) {\n  return clearTimeout(h);\n}\n\nif (!raf || !caf) {\n  let lastTime = 0;\n\n  raf = callback => {\n    let curr = now(),\n        next = Math.max(lastTime + 1000 / 60, curr);\n    return setTimeout(() => {\n      callback(lastTime = next);\n    }, next - curr);\n  };\n\n  caf = _ref;\n}\n\nexport { raf, caf, now };","map":{"version":3,"sources":["C:/Users/Work/Desktop/Wild Code School/Projects/art-gallery-react-project2/bucharest-project2-art-gallery/node_modules/@essentials/raf/dist/module/index.js"],"names":["u","win","window","p","performance","Date","now","af","Caf","Raf","raf","bind","caf","_ref","h","clearTimeout","lastTime","callback","curr","next","Math","max","setTimeout"],"mappings":"AAAA,IAAIA,CAAC,GAAG,WAAR;AAAA,IACEC,GAAG,GAAG,OAAOC,MAAP,KAAkBF,CAAlB,GAAsBE,MAAtB,GAA+B,EADvC;AAAA,IAEEC,CAAC,GAAG,OAAOC,WAAP,KAAuBJ,CAAvB,GAA2BI,WAA3B,GAAyCC,IAF/C;AAAA,IAGEC,GAAG,GAAG,MAAMH,CAAC,CAACG,GAAF,EAHd;AAAA,IAIEC,EAAE,GAAG,gBAJP;AAAA,IAKEC,GAAG,GAAG,WAAWD,EALnB;AAAA,IAMEE,GAAG,GAAG,YAAYF,EANpB;AAAA,IAOEG,GAAG,GAAGT,GAAG,CAACQ,GAAD,CAAH,IAAYR,GAAG,CAACQ,GAAD,CAAH,CAASE,IAAT,CAAcV,GAAd,CAPpB;AAAA,IAQEW,GAAG,GAAGX,GAAG,CAACO,GAAD,CAAH,IAAYP,GAAG,CAACO,GAAD,CAAH,CAASG,IAAT,CAAcV,GAAd,CARpB;;AAUA,SAASY,IAAT,CAAcC,CAAd,EAAiB;AACf,SAAOC,YAAY,CAACD,CAAD,CAAnB;AACD;;AAED,IAAI,CAACJ,GAAD,IAAQ,CAACE,GAAb,EAAkB;AAChB,MAAII,QAAQ,GAAG,CAAf;;AAEAN,EAAAA,GAAG,GAAIO,QAAD,IAAc;AAClB,QAAIC,IAAI,GAAGZ,GAAG,EAAd;AAAA,QACEa,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASL,QAAQ,GAAG,OAAO,EAA3B,EAA+BE,IAA/B,CADT;AAEA,WAAOI,UAAU,CAAC,MAAM;AACtBL,MAAAA,QAAQ,CAAED,QAAQ,GAAGG,IAAb,CAAR;AACD,KAFgB,EAEdA,IAAI,GAAGD,IAFO,CAAjB;AAGD,GAND;;AAQAN,EAAAA,GAAG,GAAGC,IAAN;AACD;;AAED,SAAQH,GAAR,EAAaE,GAAb,EAAkBN,GAAlB","sourcesContent":["let u = 'undefined',\n  win = typeof window !== u ? window : {},\n  p = typeof performance !== u ? performance : Date,\n  now = () => p.now(),\n  af = 'AnimationFrame',\n  Caf = 'cancel' + af,\n  Raf = 'request' + af,\n  raf = win[Raf] && win[Raf].bind(win),\n  caf = win[Caf] && win[Caf].bind(win)\n\nfunction _ref(h) {\n  return clearTimeout(h)\n}\n\nif (!raf || !caf) {\n  let lastTime = 0\n\n  raf = (callback) => {\n    let curr = now(),\n      next = Math.max(lastTime + 1000 / 60, curr)\n    return setTimeout(() => {\n      callback((lastTime = next))\n    }, next - curr)\n  }\n\n  caf = _ref\n}\n\nexport {raf, caf, now}\n"]},"metadata":{},"sourceType":"module"}